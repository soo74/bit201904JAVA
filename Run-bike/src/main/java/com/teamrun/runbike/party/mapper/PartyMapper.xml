<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamrun.runbike.party.dao.PartyDaoInterface">

	<resultMap id="resultPartyInfo" type="com.teamrun.runbike.party.domain.PartyInfo">
		<id property="p_num" column="p_num" />
		<result property="p_name" column="p_name" />
		<result property="p_start_info" column="p_start_info" />
		<result property="p_end_info" column="p_end_info" />
		<result property="p_XY" column="p_XY" />
		<result property="p_time" column="p_time" />
		<result property="p_capacity" column="p_capacity" />
		<result property="p_content" column="p_content" />
		<result property="p_generate_date" column="p_generate_date" />
		<result property="p_riding_km" column="p_riding_km" />
		<result property="p_riding_time" column="p_riding_time" />
		<result property="p_start_time" column="p_start_time" />
		<result property="p_end_time" column="p_end_time" />
		<result property="p_password" column="p_password" />
		<result property="p_closedYN" column="p_closedYN" />
	</resultMap>

	<resultMap id="resultPartyUserInfo" type="com.teamrun.runbike.party.domain.PartyUserInfo">
		<id property="pc_num" column="pc_num" />
		<result property="u_idx" column="u_idx" />
		<result property="p_num" column="p_num" />
		<result property="pc_masterYN" column="pc_masterYN" />
		<result property="pc_finishYN" column="pc_finishYN" />
		<result property="pc_readyYN" column="pc_readyYN" />
		<result property="pc_endYN" column="pc_endYN" />
		<result property="u_id" column="u_id" />
		<result property="u_name" column="u_name" />
		<result property="u_photo" column="u_photo" />
	</resultMap>

	<!-- 방 만들기. 좌표는 일단 더미 -->
	<insert id="insertParty" parameterType="com.teamrun.runbike.party.domain.RequestPartyCreate" useGeneratedKeys="true" keyProperty="key">
		insert into party (p_name, p_start_info, p_end_info, p_XY, p_time, p_capacity, p_content, p_generate_date, p_password, p_riding_km, p_riding_time) 
		  values
		(#{p_name},#{p_start_info},#{p_end_info},#{p_XY},#{p_time},#{p_capacity},#{p_content},default,#{p_password},#{p_riding_km},#{p_riding_time})
	</insert>
	
	<!-- 참여하기-->
	<insert id="insertParticipation" parameterType="com.teamrun.runbike.party.domain.RequestParticipationInsert">
		insert into participation(u_idx,p_num,pc_masterYN) 
		values 
		(#{u_idx},#{p_num},#{pc_masterYN})
	</insert>
	
	
	<!-- 전체 방의 리스트 구하기 -->
	<select id="selectAllPartyList" resultMap="resultPartyInfo">
		select * from party order by p_num desc
	</select>
	
	<!-- 종료되지 않은 전체 방의 리스트 구하기 -->
	<select id="selectAllPartyListClosedN" resultMap="resultPartyInfo">
		select * from party where p_closedYN='N' order by p_num desc;
	</select>
	
	<!-- 종료된 전체 방의 리스트 구하기 -->
	<select id="selectAllPartyListClosedY" resultMap="resultPartyInfo">
		select * from party where p_closedYN='Y' order by p_num desc;
	</select>
	
	<!-- 소속된 방이 있는지 -->	
	<select id="hasParty" resultType="int">
		select count(*) from participation pc join party pt on pc.p_num = pt.p_num where u_idx=#{idx} and p_closedYN='N';
	</select>
	
	<!-- 소속된 방의 번호를 가져온다 -->	
	<select id="getPartyNum" resultType="int">
		select pc.p_num from participation pc join party pt on pc.p_num = pt.p_num where u_idx=#{idx} and p_closedYN='N';
	</select>
	
	<!-- 파티 정보 가져오기 -->
	<select id="getPartyInfoOne" resultMap="resultPartyInfo">
		select * from party where p_num=#{num}
	</select>
	
	<!-- ready 컬럼 업데이트 -->
	<update id="updateReady" parameterType="com.teamrun.runbike.party.domain.ReadyInfo">
		update participation set pc_readyYN=#{readyYN} where p_num=#{p_num} and u_idx=#{u_idx}
	</update>
		
	<!-- 종료 상태 변경 -->
	<update id="updateFinish" parameterType="com.teamrun.runbike.party.domain.FinishInfo">
		update participation set pc_endYN='Y', pc_finishYN=#{finishYN} where p_num=#{p_num} and u_idx=#{u_idx}
	</update>

	<!-- 방 나가기 -->
	<delete id="deleteParticipation">
		delete from participation where p_num=#{p_num} and u_idx=#{u_idx}
	</delete>
	
	<!-- 파티에 속한 유저 리스트 -->
	<select id="getPartyUserList" resultMap="resultPartyUserInfo">
		select * from participation p join run_bike.user u on p.u_idx=u.u_idx where p_num=#{p_num};
	</select>
	
	<!-- 파티에 속한 회원의 수를 가져온다 -->	
	<select id="getPartyUserCount" resultType="int">
		select count(*) from participation where p_num=#{num}; 
	</select>
	
	<!-- 파티의 방장 번호를 가져온다 -->	
	<select id="getPartyMasterIdx" resultType="int">
		select u_idx from participation where p_num=#{num} and pc_masterYN='Y';
	</select>

	<!-- 해당 방의 방장을 초기화 -->
	<update id="resetMaster">
		update participation set pc_masterYN='N' where p_num=#{num} and pc_masterYN='Y';
	</update>
	
	<!-- 해당 방의 방장을 초기화 -->
	<update id="setMaster">
		update participation set pc_masterYN='Y' where p_num=#{p_num} and u_idx=#{u_idx};
	</update>
	
	
	<!-- 해당회원 끝났는지 확인 -->
	<select id="isEnd" resultType="int">
		select if((select pc_endYN from participation where p_num=#{p_num} and u_idx=#{u_idx})='Y', 1, 0);
	</select>
	
	<!-- 방을 삭제한다 -->
	<delete id="deleteParty">
		delete from party where p_num=#{num};
	</delete>
	
	<!-- 준비되지 않은 유저의 수를 반환한다 -->	
	<select id="getNotReadyUsercount" resultType="int">
		select count(*) from run_bike.participation where p_num=#{num} and pc_readyYN='N';
	</select>
	
	<!-- 종료하지 않은 유저의 수를 반환한다 -->	
	<select id="getNotEndUsercount" resultType="int">
		select count(*) from run_bike.participation where p_num=#{num} and pc_endYN='N';
	</select>
	
	<!--  방 수정 -->
	<update id="editParty" parameterType="com.teamrun.runbike.party.domain.RequestPartyEdit">
		update party set p_name=#{p_name}, p_start_info=#{p_start_info}, p_end_info=#{p_end_info}, p_XY=#{p_XY}, p_time=#{p_time}, p_capacity=#{p_capacity}, p_content=#{p_content}, p_password=#{p_password}, p_riding_km=#{p_riding_km}, p_riding_time=#{p_riding_time} 
		where p_num=#{p_num};
	</update>
	
	<!-- 시작 시간 업데이트 -->
	<update id="updatePartyStartTime">
		update party set p_start_time=current_timestamp() where p_num=#{p_num};
	</update>
	
	<!-- 종료 시간 업데이트, 방 종료 여부 Y -->
	<update id="endParty">
		update party set p_end_time=current_timestamp(), p_closedYN='Y' where p_num=#{p_num};
	</update>
	
</mapper>